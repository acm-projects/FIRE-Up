{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\nimport AbstractChart from \"./AbstractChart\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ProgressChart = function (_super) {\n  __extends(ProgressChart, _super);\n\n  function ProgressChart() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ProgressChart.prototype.render = function () {\n    var _this = this;\n\n    var _a = this.props,\n        width = _a.width,\n        height = _a.height,\n        style = _a.style,\n        data = _a.data,\n        hideLegend = _a.hideLegend,\n        strokeWidth = _a.strokeWidth,\n        radius = _a.radius;\n    var _b = style.borderRadius,\n        borderRadius = _b === void 0 ? 0 : _b,\n        _c = style.margin,\n        margin = _c === void 0 ? 0 : _c,\n        _d = style.marginRight,\n        marginRight = _d === void 0 ? 0 : _d;\n\n    if (Array.isArray(data)) {\n      data = {\n        data: data\n      };\n    }\n\n    var pies = data.data.map(function (pieData, i) {\n      var r = (height / 2 - 32) / (Array.isArray(data) ? data.length : data.data.length) * i + radius;\n      return Pie({\n        r: r,\n        R: r,\n        center: [0, 0],\n        data: [pieData, 1 - pieData],\n        accessor: function accessor(x) {\n          return x;\n        }\n      });\n    });\n    var pieBackgrounds = data.data.map(function (pieData, i) {\n      var r = (height / 2 - 32) / (Array.isArray(data) ? data.length : data.data.length) * i + radius;\n      return Pie({\n        r: r,\n        R: r,\n        center: [0, 0],\n        data: [0.999, 0.001],\n        accessor: function accessor(x) {\n          return x;\n        }\n      });\n    });\n\n    var withLabel = function withLabel(i) {\n      return data.labels && data.labels[i];\n    };\n\n    var withColor = function withColor(i) {\n      return data.colors && data.colors[i];\n    };\n\n    var legend = !hideLegend && _jsxs(_Fragment, {\n      children: [_jsx(G, {\n        children: pies.map(function (_, i) {\n          return _jsx(Rect, {\n            width: \"16px\",\n            height: \"16px\",\n            fill: _this.props.withCustomBarColorFromData ? withColor(i) : _this.props.chartConfig.color(0.2 * (i + 1), i),\n            rx: 8,\n            ry: 8,\n            x: _this.props.width / 2.5 - 24,\n            y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / (Array.isArray(data) ? data.length : data.data.length) * i + 12\n          }, Math.random());\n        })\n      }), _jsx(G, {\n        children: pies.map(function (_, i) {\n          return _jsx(Text, _objectSpread(_objectSpread({\n            x: _this.props.width / 2.5,\n            y: -(_this.props.height / 2.5) + _this.props.height * 0.8 / (Array.isArray(data) ? data.length : data.data.length) * i + 12 * 2\n          }, _this.getPropsForLabels()), {}, {\n            children: withLabel(i) ? data.labels[i] + \" \" + Math.round(100 * data.data[i]) + \"%\" : Math.round(100 * data.data[i]) + \"%\"\n          }), Math.random());\n        })\n      })]\n    });\n\n    return _jsx(View, {\n      style: __assign({\n        width: width,\n        height: height,\n        padding: 0\n      }, style),\n      children: _jsxs(Svg, {\n        width: width - margin * 2 - marginRight,\n        height: height,\n        children: [this.renderDefs(__assign({\n          width: this.props.height,\n          height: this.props.height\n        }, this.props.chartConfig)), _jsx(Rect, {\n          width: \"100%\",\n          height: this.props.height,\n          rx: borderRadius,\n          ry: borderRadius,\n          fill: \"url(#backgroundGradient)\"\n        }), _jsxs(G, {\n          x: this.props.width / (hideLegend ? 2 : 2.5),\n          y: this.props.height / 2,\n          children: [_jsx(G, {\n            children: pieBackgrounds.map(function (pie, i) {\n              return _jsx(Path, {\n                d: pie.curves[0].sector.path.print(),\n                strokeWidth: strokeWidth,\n                stroke: _this.props.chartConfig.color(0.2, i)\n              }, Math.random());\n            })\n          }), _jsx(G, {\n            children: pies.map(function (pie, i) {\n              return _jsx(Path, {\n                strokeLinecap: \"round\",\n                strokeLinejoin: \"round\",\n                d: pie.curves[0].sector.path.print(),\n                strokeWidth: strokeWidth,\n                stroke: _this.props.withCustomBarColorFromData ? withColor(i) : _this.props.chartConfig.color(i / pies.length * 0.5 + 0.5, i)\n              }, Math.random());\n            })\n          }), legend]\n        })]\n      })\n    });\n  };\n\n  ProgressChart.defaultProps = {\n    style: {},\n    strokeWidth: 16,\n    radius: 32\n  };\n  return ProgressChart;\n}(AbstractChart);\n\nexport default ProgressChart;","map":{"version":3,"sources":["../src/ProgressChart.tsx"],"names":[],"mappings":"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","sourcesContent":["import Pie from \"paths-js/pie\";\nimport React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\nimport { G, Path, Rect, Svg, Text } from \"react-native-svg\";\n\nimport AbstractChart, {\n  AbstractChartConfig,\n  AbstractChartProps\n} from \"./AbstractChart\";\n\nexport type ProgressChartData =\n  | Array<number>\n  | { labels?: Array<string>; colors?: Array<string>; data: Array<number> };\n\nexport interface ProgressChartProps extends AbstractChartProps {\n  data: ProgressChartData;\n  width: number;\n  height: number;\n  center?: Array<number>;\n  absolute?: boolean;\n  hasLegend?: boolean;\n  style?: Partial<ViewStyle>;\n  chartConfig?: AbstractChartConfig;\n  hideLegend?: boolean;\n  strokeWidth?: number;\n  radius?: number;\n  withCustomBarColorFromData?: boolean;\n}\n\ntype ProgressChartState = {};\n\nclass ProgressChart extends AbstractChart<\n  ProgressChartProps,\n  ProgressChartState\n> {\n  public static defaultProps = { style: {}, strokeWidth: 16, radius: 32 };\n\n  render() {\n    let {\n      width,\n      height,\n      style,\n      data,\n      hideLegend,\n      strokeWidth,\n      radius\n    } = this.props;\n\n    const { borderRadius = 0, margin = 0, marginRight = 0 } = style;\n\n    if (Array.isArray(data)) {\n      data = {\n        data\n      };\n    }\n\n    const pies = data.data.map((pieData, i) => {\n      const r =\n        ((height / 2 - 32) /\n          (Array.isArray(data) ? data.length : data.data.length)) *\n          i +\n        radius;\n\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [pieData, 1 - pieData],\n        accessor(x: string) {\n          return x;\n        }\n      });\n    });\n\n    const pieBackgrounds = data.data.map((pieData, i) => {\n      const r =\n        ((height / 2 - 32) /\n          (Array.isArray(data) ? data.length : data.data.length)) *\n          i +\n        radius;\n      return Pie({\n        r,\n        R: r,\n        center: [0, 0],\n        data: [0.999, 0.001],\n        accessor(x: string) {\n          return x;\n        }\n      });\n    });\n\n    const withLabel = (i: number) =>\n      (data as any).labels && (data as any).labels[i];\n\n    const withColor = (i: number) =>\n      (data as any).colors && (data as any).colors[i];\n\n    const legend = !hideLegend && (\n      <>\n        <G>\n          {pies.map((_, i) => {\n            return (\n              <Rect\n                key={Math.random()}\n                width=\"16px\"\n                height=\"16px\"\n                fill={\n                  this.props.withCustomBarColorFromData\n                    ? withColor(i)\n                    : this.props.chartConfig.color(0.2 * (i + 1), i)\n                }\n                rx={8}\n                ry={8}\n                x={this.props.width / 2.5 - 24}\n                y={\n                  -(this.props.height / 2.5) +\n                  ((this.props.height * 0.8) /\n                    (Array.isArray(data) ? data.length : data.data.length)) *\n                    i +\n                  12\n                }\n              />\n            );\n          })}\n        </G>\n        <G>\n          {pies.map((_, i) => {\n            return (\n              <Text\n                key={Math.random()}\n                x={this.props.width / 2.5}\n                y={\n                  -(this.props.height / 2.5) +\n                  ((this.props.height * 0.8) /\n                    (Array.isArray(data) ? data.length : data.data.length)) *\n                    i +\n                  12 * 2\n                }\n                {...this.getPropsForLabels()}\n              >\n                {withLabel(i)\n                  ? `${(data as any).labels[i]} ${Math.round(\n                      100 * (data as any).data[i]\n                    )}%`\n                  : `${Math.round(100 * (data as any).data[i])}%`}\n              </Text>\n            );\n          })}\n        </G>\n      </>\n    );\n\n    return (\n      <View\n        style={{\n          width,\n          height,\n          padding: 0,\n          ...style\n        }}\n      >\n        <Svg\n          width={width - (margin as number) * 2 - (marginRight as number)}\n          height={height}\n        >\n          {this.renderDefs({\n            width: this.props.height,\n            height: this.props.height,\n            ...this.props.chartConfig\n          })}\n          <Rect\n            width=\"100%\"\n            height={this.props.height}\n            rx={borderRadius}\n            ry={borderRadius}\n            fill=\"url(#backgroundGradient)\"\n          />\n          <G\n            x={this.props.width / (hideLegend ? 2 : 2.5)}\n            y={this.props.height / 2}\n          >\n            <G>\n              {pieBackgrounds.map((pie, i) => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={strokeWidth}\n                    stroke={this.props.chartConfig.color(0.2, i)}\n                  />\n                );\n              })}\n            </G>\n            <G>\n              {pies.map((pie, i) => {\n                return (\n                  <Path\n                    key={Math.random()}\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    d={pie.curves[0].sector.path.print()}\n                    strokeWidth={strokeWidth}\n                    stroke={\n                      this.props.withCustomBarColorFromData\n                        ? withColor(i)\n                        : this.props.chartConfig.color(\n                            (i / pies.length) * 0.5 + 0.5,\n                            i\n                          )\n                    }\n                  />\n                );\n              })}\n            </G>\n            {legend}\n          </G>\n        </Svg>\n      </View>\n    );\n  }\n}\n\nexport default ProgressChart;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}